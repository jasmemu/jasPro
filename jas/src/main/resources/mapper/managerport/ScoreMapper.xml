<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.zyg.jas.managerport.dao.ScoreDao">
    <!--开启本Mapper的二级缓存-->
    <cache></cache>

    <resultMap id="scoreMap" type="com.zyg.jas.common.pojo.Score">
        <id property="id" column="id" />
        <result property="hId" column="h_id"/>
        <result property="sNo" column="s_no"/>
        <result property="comId" column="com_id"/>
        <result property="score" column="score"/>
        <result property="comment" column="comment"/>
        <result property="correctDate" column="correct_date"/>
        <result property="commitedJobUrl" column="commited_job_url"/>
        <result property="commitedJobPath" column="commited_job_path"/>
        <association property="student" javaType="com.zyg.jas.common.pojo.Student">
            <id property="sNo" column="s_no" />
            <result property="name" column="s_name" />
        </association>
        <association property="homework" javaType="com.zyg.jas.common.pojo.Homework">
            <id property="hId" column="h_id" />
            <result property="hName" column="h_name"/>
            <result property="courseId" column="course_id"/>
            <result property="publishDate" column="publish_date"/>
            <result property="endDate" column="end_date"/>
            <result property="mark" column="mark"/>
            <association property="course" javaType="com.zyg.jas.common.pojo.Course">
                <id property="courseId" column="course_id" />
                <result property="name" column="cs_name"/>
            </association>
        </association>
    </resultMap>

    <resultMap id="studentMap" type="com.zyg.jas.common.pojo.Student">
        <id property="sNo" column="s_no" />
        <result property="name" column="s_name" />
        <result property="phone" column="s_phone"/>
    </resultMap>

    <insert id="insertScore"  parameterType="com.zyg.jas.common.pojo.Score">
       insert  into score(h_id, s_no, com_id, score, comment, correct_date, commited_job_url, commited_job_path)
       values (#{hId},#{sNo},#{comId},#{score},#{comment},#{correctDate},#{commitedJobUrl},#{commitedJobPath});
   </insert>

    <select id="selectCount" resultType="Integer"  parameterType="String">
         select count(score.id) from score where score.com_id = #{cmtId} and score.h_id
         in(
         select homework.h_id from homework where  homework.course_id = #{courseId}
         );
    </select>

    <select id="selectScoresByCmtId" parameterType="com.zyg.jas.common.pojo.Score" resultMap="scoreMap">
        select score.* ,homework.*,student.s_no,student.s_name,course.course_id,course.cs_name from score
        inner join student on score.s_no = student.s_no inner join homework on score.h_id = homework.h_id
        inner join course on homework.course_id = course.course_id where score.com_id=#{cmtId} AND score.h_id
        IN (select homework.h_id from homework where  homework.course_id = #{courseId})
    </select>


    <select id="selectCountForSearch" resultType="Integer" parameterType="Map">
        select count(score.id)  from score inner join  homework  on score.h_id = homework.h_id
        where 1=1 and  homework.h_name  like concat('%',#{hName},'%')
        <if test="commit== 'yes'">
            and score.score is not null
        </if>
        <if test="commit == 'no'">
            and score.score is null
        </if>
        and
        score.com_id=#{cmtId}
        and score.h_id
        in(
        select homework.h_id from homework where  homework.course_id = #{courseId}
        );
    </select>

    <select id="selectForSearch" resultMap="scoreMap">
        select score.* ,homework.*,student.s_no,student.s_name,course.course_id,course.cs_name from score
        inner join student on score.s_no = student.s_no inner join homework on score.h_id = homework.h_id
        inner join course on homework.course_id = course.course_id
        where  homework.h_name like concat('%',#{hName},'%')
        <if test="commit== 'yes'">
            and score.score is not null
        </if>
        <if test="commit == 'no'">
            and score.score is null
        </if>
       and  score.com_id=#{cmtId}
        AND score.h_id
        IN (select homework.h_id from homework where  homework.course_id = #{courseId})
    </select>

    <select id="selectAllStudentForSubmitJob" resultMap="studentMap" parameterType="Integer">
        SELECT student.s_no,student.s_name,student.s_phone from student,
        (select spe_id,c_grade,c_class from committee WHERE com_id in (SELECT com_id FROM homework WHERE h_id = #{jobId})) as sgc
        WHERE sgc.spe_id = student.spe_id and sgc.c_grade=student.s_grade and sgc.c_class = student.s_class;
    </select>

    <select id="selectStudentForSubmitJob" resultMap="studentMap" parameterType="Integer">
        SELECT student.s_no,student.s_name,student.s_phone from student,score,
        (select spe_id,c_grade,c_class from committee WHERE com_id in (SELECT com_id FROM homework WHERE h_id = #{jobId})) as sgc
        WHERE sgc.spe_id = student.spe_id and sgc.c_grade=student.s_grade and sgc.c_class = student.s_class and score.s_no=student.s_no and score.h_id=#{jobId};
    </select>

    <select id="selectStudentForNoSubmitJob" resultMap="studentMap" parameterType="Integer">
         SELECT student.s_no,student.s_name,student.s_phone from student,score,
        (select spe_id,c_grade,c_class from committee WHERE com_id in (SELECT com_id FROM homework WHERE h_id = #{jobId})) as sgc
        WHERE sgc.spe_id = student.spe_id and sgc.c_grade=student.s_grade and sgc.c_class = student.s_class   and student.s_no not in
        (SELECT DISTINCT score.s_no from score where score.h_id = #{jobId});
    </select>

    <select id="selectScForLevelByHid" resultMap="scoreMap" parameterType="Integer">
        select  h_id,s_no,com_id,score from score where h_id = #{hId};
    </select>

    <update id="updateScoreById"  >
        update score set score=#{score},comment=#{comment} where id =#{id};
    </update>





</mapper>